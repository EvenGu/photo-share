%!PS-Adobe-3.0 EPSF-3.0
%%HiResBoundingBox: 0.000000 0.000000 759.000000 634.000000
%APL_DSC_Encoding: UTF8
%%Title: (Unknown)
%%Creator: (Unknown)
%%CreationDate: (Unknown)
%%For: (Unknown)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox: 0 0 759 634
%%EndComments
%%BeginProlog
%%BeginFile: cg-pdf.ps
%%Copyright: Copyright 2000-2004 Apple Computer Incorporated.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
%/as/ashow
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
%dup (number of ld's = )print == flush	% *** how many 
{ld}repeat pop
/SC{	% CSname
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		% pop the ctm: our gstate ctm on host is now identity
/cm {cmmtx astore CM concat}bd	% reset the matrix and then concat
/W{clip newpath}bd
/W*{eoclip newpath}bd

statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	% pop off the search results
    true
}{
    pop	% previous search result
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse

{	% HP is the product: we use this method of stroking because of a bug in their clone printers with certain T3 fonts
    { 
	{ % charCode Wx Wy
	    pop pop % charCode
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		% dont' bind
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd

/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd

/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	% don't use F
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd

/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	% leave room for imagetype and imagematrix
dict begin
{def} repeat
pop		% remove mark
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
% currentdict on stack
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	% pop imagedict from dict stack
}bd

/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ % x y
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ % x y
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        % x y
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		% don't bind sop
/cp_proc/x_proc ld 	% default moveto proc is for xwidths only
/base_charpath		% string array
{
    /t_array xs
    /t_i 0 def
    { % char
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		% default sop is stroke. Done here so we don't bind in /base_charpath 

% default sop is stroke
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ % newname encoding fontname
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ % newname fontname
findfont dup length dict copy definefont pop
}bd

L3? dup dup{save exch}if

% languagelevel2 ONLY code goes here

/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def

/setupFunEval % funDict -- 	% this calculates and sets up a function dict for evaulation.
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   % precompute the range data needed to map a sample value from the table to a range value
		    % this data looks like [ range0mul range0min range1mul range1min ... rangeN-1mul rangeN-1min ]
	[ 
	    0 1 nRange 1 sub
	    { % index
		    2 mul/nDim2 xd		% 2*dimension# we are dealing with
		    Range nDim2 get		% ymin
		    Range nDim2 1 add get	% ymin ymax 
		    1 index sub			% ymin (ymax-ymin)
						% xmin = 0, xmax = 255 (2^bitspersample - 1)
		    255 div			% ymin (ymax-ymin)/(xmax - xmin)
		    exch			% (ymax-ymin)/(xmax - xmin) ymin
	    }for
	]store
    end
}bd

/FunEval % val1 fundict -> comp1 comp2 ... compN
{
    begin
	% the value passed in is the base index into the table
	nRange mul /val xd	% compute the actual index to the table
				% since there are nRange entries per base index
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd % dim
	    val	% base value to use to do our lookup
	    add DataSource exch get %  lookedupval
	    mulRange nDim2 get mul 	% lookedupval*(ymax-ymin)/(xmax-xmin)
	    mulRange nDim2 1 add get % lookedupval*(ymax-ymin)/(xmax-xmin) ymin
	    add % interpolated result
	}for	% comp1 comp2 ... compN
    end
}bd

/max % a b -> max(a, b)
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd

/sh2
{	% emulation of shading type 2. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 x1 y1
	3 index 3 index translate	% origin is now at beginning point of shading
					% x0 y0 x1 y1
	3 -1 roll sub	% x0 x1 y1-y0
	3 1 roll exch 	% y1-y0 x1 x0
	sub				% y1-y0 x1-x0
	2 copy
	dup mul exch dup mul add sqrt	% length of segment between two points
	dup
	scale  
	atan	% atan (dy/dx)
	%dup (rotation angle = )print ==
	rotate		% now line between 0,0 and 1,0 is the line perpendicular to which the axial lines are drawn					
	
	/Function load setupFunEval	% may need to setup function dictionary by calling setupFunEval
	
	% this is now specific to axial shadings. Compute the maximum bounds to fill
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	% paint the rects. The sampling frequency is that of our table
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		% loop Nsteps + 1 times, incrementing the index by 1 each time
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	% pop our function
	grestore	% origin is back to start point
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	% last element
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd

/shp	% this paints our shape for shading type 3
{	% x1 r1 x0 r0 -
	4 copy

	% fill interior arc
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill

	% fill exterior arc
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd

/calcmaxs
{	% calculate maximum distance vector from origin to corner points
	% of bbox
	xmin dup mul ymin dup mul add sqrt		% (xmin2 + ymin2)
	xmax dup mul ymin dup mul add sqrt		% (xmax2 + ymin2)
	xmin dup mul ymax dup mul add sqrt		% (xmin2 + ymax2)
	xmax dup mul ymax dup mul add sqrt		% (xmax2 + ymax2)
	max max max								% maximum value
}bd

/sh3
{	% emulation of shading type 3. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 r1 x1 y1 r2
	5 index 5 index translate	% origin is now at first circle origin
	3 -1 roll 6 -1 roll sub		% y0 r1 y1 r2 dx
	3 -1 roll 5 -1 roll sub		% r1 r2 dx dy
	2 copy dup mul exch dup mul add sqrt
	/dx xs						% r1 r2 dx dy
	2 copy 0 ne exch 0 ne or
	{
		% r1 r2 dx dy
		exch atan rotate	% we are now rotated so dy is zero and positive values of dx move us as expected
	}{
		pop pop
	}ifelse
	% r1 r2		
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	% this is the size of our table minus 1
	/Nsteps xs		% at some point we should optimize this better so NSteps is based on needed steps for the device
	setupFunEval		% may need to setup function dictionary by calling setupFunEval
	% determine the case:
	% case 0: circle1 inside circle2
	% case 1: circle 2 inside circle 1
	% case 2: r1 = r2 
	% case 3: r1 != r2
	dx r2 add r1 lt{
		% circle 2 inside of circle 1
		0 
	}{
		dx r1 add r2 le
		{ % circle 1 inside of circle 2
			1
		}{ % circles don't contain each other
			r1 r2 eq
			{	% equal
				2
			}{ % r1 != r2
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		% sh3tp has the number of our different cases
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs

	% Arc angle atan( sqrt((dx*dx + dy*dy) - dr*dr), dr)
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		

	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	% no need to extend if the radius of the first end is 0
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{	% case 0
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				}
				{	% case 1
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	% case 2
					% r1 == r2, extend 0
					% r3 = r, x3 = -(abs(minx) + r), x1 = 0
				
					% x(i+1) r(i+1) x(i) r(i) shp
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	% case 3
					% no containment, r1 != r2
				
					r2 r1 gt{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1
						r1 neg r2 r1 sub div dx mul	% this is point of beginning circle
						0	% point of ending circle
						shp	% takes x(i+1) r(i+1) x(i) r(i)
					}{	% the first circle is the bigger of the two
						% we find a circle on our line which is outside the bbox in the
						% negative direction
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1 calcmaxs	% 0 r1 maxs
						dup
						% calculating xs: (-(maxs+r2)*x2)/(x2-(r1-r2))
						r2 add dx mul dx r1 r2 sub sub div
						neg				% maxs xs'
						exch 1 index	% xs' maxs xs'
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	% execute the extend at beginning proc for our shading type
		}if
	}if

	% now do the shading
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	% function t(i)
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		% fill interior arc
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		% fill exterior arc
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		% advance to next
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	% pop our function dict

	% handle Extend
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	% no need to extend if the radius of the last end is 0
		{	
			Nsteps/Function load FunEval sc	% last element
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				} 
				{	% r1 == r2, extend 1
					% r3 = r, x3 = (abs(xmax) + r), x1 = dx
					% x(i+1) r(i+1) x(i) r(i) shp
					xmax abs r1 add r1 dx r1 shp
				}	
				{	% no containment, r1 != r2
			
					r2 r1 gt{
						% we find a circle on our line which is outside the bbox in the
						% positive direction
						% x(i+1) r(i+1) x(i) r(i) shp
						calcmaxs dup	% maxs maxs
						% calculating xs: ((maxs+r1)*x2)/(x2-(r2-r1))
						r1 add dx mul dx r2 r1 sub sub div	% maxs xs
						exch 1 index	% xs maxs xs
						exch sub
						dx r2
						shp
					}{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						r1 neg r2 r1 sub div dx mul	% this is point of ending circle
						0		% radius of ending circle
						dx 		% point of starting circle
						r2		% radius of starting circle
						shp
					}ifelse
				}
			}			
			sh3tp get exec	% execute the extend at end proc for our shading type
		}if
	}if
}bd
/sh		% emulation of shfill operator for type 2 and type 3 shadings based on type 0 functions
{	% shadingDict --
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	% shadingtype
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	% llx lly urx ury
					2 index sub				% llx lly urx ury-lly
					3 index					% llx lly urx ury-lly llx
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			% shadingtype
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd

% end of language level 2 ONLY code

{restore}if not dup{save exch}if
% languagelevel3 ONLY code goes here
	L3?{	% we do these loads conditionally or else they will fail on a level 2 printer
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if

%currentdict dup maxlength exch length sub (number of extra slots in md = )print == flush	% *** how many entries are free
end
setpacking
% count 0 ne { pstack(***extras on stack during prolog execution***\n)print flush}if	% *** BARK if anything is left on stack
%%EndFile
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 759 634
%%BeginPageSetup
cg_md begin
bp
sdmtx
%RBIBeginFontSubset: STHeitiSC-Light
%!FontType1-1.0: STHeitiSC-Light 1.0000.1.0000
14 dict begin/FontName /STHeitiSC-Light def
/PaintType 0 def
/Encoding 256 array 0 1 255{1 index exch/.notdef put}for
dup 33 /gid86 put
dup 34 /gid67 put
dup 35 /gid73 put
dup 36 /gid85 put
dup 37 /gid82 put
dup 38 /gid74 put
dup 39 /gid81 put
dup 40 /gid87 put
dup 41 /gid71 put
dup 42 /gid84 put
dup 43 /gid75 put
dup 44 /gid3 put
dup 45 /gid72 put
dup 46 /gid80 put
dup 47 /gid70 put
dup 48 /gid88 put
dup 49 /gid78 put
dup 50 /gid68 put
dup 51 /gid79 put
dup 52 /gid69 put
dup 53 /gid89 put
dup 54 /gid90 put
dup 55 /gid77 put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[1000 -595 1 index div -290 2 index div 1182 3 index div 1226 5 -1 roll div]cvx def
/sfnts [<

78FDB38000020034002A025D025D000C0015002ABA0001000D00032BB8000D10B80003D0B800032FB8000D10B8000BD0B8000B2FB8000110B80017DC303101112335062226343633321735133426220614163236025D435BEAA1A2718251047AB17A7CAD7C024FFDED5B6DA7E7A56F61FEF45B7D81B0817C00020051002A027A031C000D00160027BA000E000000032BB8000E10B80002D0B800022FB8000E10B8000CD0B8000C2F00B800012F303137113311363332161406232227150314163236342622065143577E729FA2717E55047AB07B78B4793C02E0FED869A5E8A67462010D5D8082AF827A000000010036002A0253025D0015001300BA0008000E00032BBA0013000300032B30310107262322061416333237170E012322263436333216025336467A60828062754B3628874E7BA5A7834D8301E1225D7BB6825D243A3EA2EAA7420000020035002A025E031C000C0015002BBA0001000200032BB8000210B8000BD0B8000210B8000DD0B8000D2FB8000110B80017DC00B800002F303101112335062226343633321711133426220614163236025E435BEBA0A27182510478B4797CA980031CFD205B6DA6E8A56F012EFE265B7E81AF827B000000020033002A0257025D000F0015001300BA000E000300032BBA0010000A00032B30312517062322263436321617211E013332132E01232207020B3A56A8789C9DE79D03FE2203735287430E7049962EE81EA0A5E8A69A85607501104C56A20000010027003C0127031C0014004BBA000A000B00032BB8000B10B80001DCB8000A10B80005D0B8000110B80007D0B800072FB8000B10B8000FD000B8000A2FBA0007000800032BB8000810B8000CD0B8000710B8000ED0303101152622061D0133152311231123353335343633320127273D126F6F454545343720030E4311272C3A3AFE2701D93A4546420000020038FF7A0262025D001B00250033BA0002001C00032BB8001C10B80000D0B800002FB8001C10B80010D0B800102FB8000210B80027DC00BA000C000700032B3031013311140E02232227331633323E013D010E01232226353436321F01342623220614163236021D452648663DD0424A3A8B43632929703E749AA4E9580376575C7A76B875024FFE666D664424A6683451561733329E6B6FA06AA557767FA47370000001004C003C021C031C00160049B800172FB8000A2FB8001710B80000D0B800002FB80001DCB8000A10B80009DCB8000110B80014D0B8000910B80018DC00B800002FB800092FB800152FBA00020009000011123930311333113633321E0115112335342E02220E021D01234C4552753C6028450A2239514A341245031CFED46D416966FEEFFD523E381D2644486DC30002002C003C009D031C0008000C000FBA000A000900032B00B8000B2F303113


00>] def
/CharStrings 25 dict dup begin
/.notdef 0 def
/gid3 1 def
/gid67 2 def
/gid68 3 def
/gid69 4 def
/gid70 5 def
/gid71 6 def
/gid72 7 def
/gid73 8 def
/gid74 9 def
/gid75 10 def
/gid77 11 def
/gid78 12 def
/gid79 13 def
/gid80 14 def
/gid81 15 def
/gid82 16 def
/gid84 17 def
/gid85 18 def
/gid86 19 def
/gid87 20 def
/gid88 21 def
/gid89 22 def
/gid90 23 def
/gid52212 24 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontType 1 def
/FontMatrix [ 0.001 0 0 0.001 0 0 ] def
/FontBBox{-595 -290 1182 1226}def
/UniqueID 4005377 def
currentdict currentfile eexec
54544758EC884CF30C3CD503CEDBFF3839C47C3C3333173232E3FDBFF439491DB843E1924E63AA7726BBB0485AB56D93D8C0906F647A47162891E73FFC2A9873C4B1EAC5EEBDFFC4D06084FBD84139DF4583C6E259D10699944D1068C9C45667DCCCFB9B7EA01B606435EDCBD273ABAC093D14085CCBAC149BD7382E842CFE0D7FE4FD2EF589A2471F6074A80A8B675C2F7A50D63AC1EF90D787BADD11633CB01CF6EE3B37AAF9078A69AC4740E9B6525D78BBD839551A1CB80DB8682FA5E87591BBD6EE8B946063A2A58D9CA3685AB305495DC5FB5747EB8A9A059C4976C0FE4EEAB1D56FF47F1E9664ED9F4A7DAB763AF92B2F6CF2FA7DEC24710E0B9096E30F772BA7FEA9BDBE496C42ED2CEB58F54E80BDF57CE7B4DB6CCFE7182F43BF93CCA0767AF95D62C5D2C3DC6AE1E6D139F51A2C63432117F1714C5566572EE9967A715420ABDCD1D7BD74F8450B89965FCC81C6ACA565C5F3CCF91D430D1F953E4F1A645300A98DD8C47CD64555F08F422340A85404EAE0D3229C4F9336B9470CACBD6BBF3395104750A915CC6EAAC197668267B8C62D2764C8CD69FD937CA3C924D997A0EDE7964BEB9EA2F92EF70C5E5DA0AA5567765E71F2B911B3C5586B741EEB93F3C73016EC16BFF283758900903D203992EFC8BAFAF13579C602F38C926774C520A180165F2668824383C2FD0BBD585551A6494A5974E808856CCCFF32A75F33352F5A80B9C252C7E5019333EB4363E57F0430590DCE6E4583AAA9F87CDF1AD622314EBBE4874B711AD6BAE4DDA941E5411F1C2D7898930426B2242908CA313707450A0E453D60B6DC08E215E964FB3151974C8273CA0BE34EEF2720A17FB039DB534244AF746966718925F533635DC60121C8FEBE1A6C41F12999AF40A1A84DD10E24E0EDC029AB20638AA0102EEBE49238D2CE605221AB3ADB9C05C6820352D5ABC50070261D079F3B9E4A2C54EBD35276ED120ECFDA32582A4BA85289E40583EB8C3360C5EF51974EB6114E73A0666E4F3193120263940EDC29DBCC946F4D4F53FE3AB3EECD08737F41ADE5BDFC9DCE5B15D312F4078E4F89945E06878F177FB1F7BEA1EC85C5D519F28847981FDACC667E2B0E3202B8C413B133C36AFD75711F93CF4CE3EC6B5CCD81D2BD3605CC14C9C76EA344174DB6B43CF0F70A5F3761C564D3D973AC809754767162BF7E8FF5DEF284C967FB4787BDACCE5E842726D3DF15B41C45D2AC51462A4D76E627387B52622EAF4A9AD63B3C57F71CD20EDB9C6369DC9176E1EB6021063C49571C53ACEC31B857C4AF82EACA4960F232AAB70C30596EA1DAA20D6C7BB816D372B0DE8391DF1343F1995F24BC2D110124E9046B3ACE1E763EEDD3CD35E1C9703C247966593F756C6FCBD3681530311E877DC51819C5B245B90C3F06A1B214D037BA108F115B508C07A14FA2694AF805

B6DE70167262C9A454A66EC62E1FB98287085E2275529CB53D6907E2170AF72F4785A46BB48D767E6538BEFADDB5C8C488C93810F642EDFAC5A983AED4A991971B47C4672BE976DDD17C87EDF38F81DE3DDB06AED1F7ECDB6F60A280C7F65E9CD0DB778D9389FB65BB49B5A08D7D42812133DCC1567A3210B24AA4340A1F3B4533ED54B02B0F0DBFDD824C2FA51A55B3CD5A4357A3D787670207D5686100B4A345E1C330BE91F35A68D8118ECBD050D6FF5481D6D8728347163165335FEB0EFFFBA7F01C77E35817D89EC20F0A2AE7265E72BE25BBC61B0C1A42C5694B6B25F51AD03F73FD552D14DE3E9C9CC37DC020E0174DD44F72C5AE583EFDD3FB0195B5E900CB0216F921166E5DAE19EFDACEF7E0C44D89033802F7E17ED9C5430D5FF89A004F303EA460DF6B5B6A4149368F037C4504A03B788F9A9E420FEBA7F367D868C617CCAEBD750DBC93BDAEEC094C30D712EAE191F64AD61740C9C41956AB73E616BBBBDF56949FDE30BB76D7DB79972A62ABE8DD8B858D3B2F8E55FF951C07242CA3779485F90B029A999CBE53EB16C89AA4BFF8A8CAA4D99356474B67DA2468D70C30F3056C391D6753FCDD6C210F968F6FBBF82CFA1B796E097F77D86CDBC4F0E5C29A5264A129A2EF7978A0602AC3850D90BC8C2E7421644EB0926281BEEB76602D483D5745C7673FBE9D66964D018EDA119CF3EACB85A3E8D676CE2D8DDB149A325234206C25DE3D4D16EF3C7D079338CB45CE76FF77EB4755702196518622CFD55AD2A388B3B63C3818A03976D5013130E02E3CE54DA95BF7D73E94F8C0ED272EFB7E4ECB02FB8BA5A1C26AB15E8FA5BEA6510D12DCB28A0B8C096469ACC6435C6D773BD7845F7F90D278BFA1234CD62BFCA1260AE1926473F18421A06B5B84D5F255CD17B756591B838F2309B2AC9C1E22389D195E485898470107A1E6FF312E08D7B4FF41E883EEA10BC06D7D85A65C1A895100A95D28C936053D777BA9FA78249386A901D9CFAC45A6B3C62B57501C00DE8D533764CAD3F2B38851D154779F4E50B7AC94E3222B5B2328E3B83DC047DBECBF63E137DA3F5A74A9E4C4647CB998B7D0D8A9CC189816E7EA3AA621F9B35E3916DC8B26966BCF6A5E2A12D4510695EBF73B30DDD7B4918DBFF7CFD133FD976ED6CFA2545AC25C1F8F769D9B2EFB2D587AA1984198C7A77D7ED8469FA74ECFBCC632EC16A8B955612B06EF78F02FE06B4BCDE1304C4710B5C26DD86C6CF3C96601989DBAA28B4A79C5D8DB6AE283B8229B28B10F7B7864EEDDEBBA859BBAB7EC3A56273E6FD99D2FF214FA23F51E8A75F942DE4458A8249202B478F29F7EFF91B977E4C3CFEF8385ED617FA744024BEDBF87BA937E56AFE5BD0F401083DAE41592467CC319DD5D7886F7DB611DBEEB09A00AF4BF36B58011028F84FB65F8B778470A17DE326652383CA0
393C52F2D438FCAE70311351B0C59CF727D3D4DB25ADB5E877244FDAB34BBF58C10FC3B6FDF9109C4E1EEEC36557B522308FE03623AC471EC4C7ABCF42760E3FBAB9333052F2B2B4F3673615DC3F383A7455DCC86DA40B9BCEE165F49074AF86ABE7DFFFF7DF7C6E71D02EF69641B1A47B188EA03DE233641BC8C38E1C080F4111263392A6312BB518A982CF67C1B4FFC868216781DFA082983C0B9D2D33CA0720BC3C3FFE97E63C601A2801182B13E809274C5FD235D824E96A27036F2669329908DF71AC4532FCEF168754A59B39978A5912A468F9A493448C0CEC9393688B75B45A7E2C35F80782F03EAECAF8B3F8F0A0362D115644F32A5E928002169309FD2C93407A178DAB1DC5FD9623174E24409F2000AC720CCA9BC540240D1ADC241F016A7C2C9D1F794B8C1C1AE308E9DB6DD55B1607BD3BA08E3C36D66564B07580E5FBF3325674A62C538B25401E79B71CEDD0016220E563A9A0FE1C77DE2E75DEA716583D076AC2920A7FC5F8E43B43EADF14B4F7C3A9BAD895E5748F7951B151042E673146EA98602A6BE4422B3347F9BA810A5DE1655CB3B5C76EE92B6C1243651017731E7EBEB4D8D022AB5214D80D2321EFC4FA5A51CEF1001844EB86F0
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark end
%APLT1End
%RBIEndFontSubset
/STHeitiSC-Light cguidfix
/F1.1/STHeitiSC-Light renmfont
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ { 1.8008  exp } bind { 1.8008  exp } bind { 1.8008  exp } bind ] def 
/MatrixABC [ 0.4295 0.2318 0.0204 0.3278 0.6722 0.1111 0.1933 0.0960 0.9578 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs1 exch/ColorSpace dr pop
[ /CIEBasedA 5 dict dup begin /WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeA { { 1.8008  exp } bind  exec} bind 
def 
/MatrixA [ 0.9642 1.0000 0.8249 ] def 
/RangeLMN [ 0.0 2.0000 0.0 2.0000 0.0 2.0000 ] def 
/DecodeLMN [ { 0.9857  mul} bind { 1.0000  mul} bind { 1.3202  mul} bind ] def 
end ] /Cs2 exch/ColorSpace dr pop
%%EndPageSetup
/Cs1 SC
1 1 1 sc
q
0 0 759 634 rc
83 731 m
642.27557 731 l
642.27557 -51.889771 l
83 -51.889771 l
h
83 731 m
f
101 506 m
182 506 l
182 470 l
101 470 l
h
101 506 m
f
1 J
1 j
0.60000002 i
0 0 0 sc
1 0 0 -1 83 731 cm
18 225 m
99 225 l
99 261 l
18 261 l
h
18 225 m
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 141.5 488 cm
/F1.1[ 14 0 0 -14 0 0]sf
-14.581 4.7900085 m
(!"#$)[ 4.746000 9.562000 9.422000 0.000000 ] xS
/Cs1 SC
1 1 1 sc
CM
101 326 m
182 326 l
182 290 l
101 290 l
h
101 326 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 83 731 cm
18 405 m
99 405 l
99 441 l
18 441 l
h
18 405 m
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 141.5 308 cm
-23.302999 4.7900085 m
(%&'!'$)[ 9.548000 8.540000 9.170000 4.746000 9.170000 0.000000 ] xS
/Cs1 SC
1 1 1 sc
CM
497 344 m
578 344 l
578 272 l
497 272 l
h
497 344 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 83 731 cm
414 387 m
495 387 l
495 459 l
414 459 l
h
414 387 m
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 537.5 308 cm
-13.629 4.7900085 m
(\($\)*)[ 8.512000 5.432000 9.100000 0.000000 ] xS
/Cs1 SC
1 1 1 sc
CM
537.5 227 m
578 200 l
537.5 173 l
497 200 l
h
537.5 227 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 83 731 cm
454.5 504 m
495 531 l
454.5 558 l
414 531 l
h
454.5 504 m
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 537.5 200 cm
/F1.1[ 12 0 0 -12 0 0]sf
-20.778 3.2800074 m
(+$,-*+\)./)[ 2.400000 4.656000 3.000000 3.768000 3.612000 2.400000 7.800000 7.320000 0.000000 ] xS
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 83 731 cm
495 531 m
476.42178 459 l
S
414 531 m
433.56769 459 l
S
0 i
1 1 1 sc
CM
141.5 434 m
182 407 l
141.5 380 l
101 407 l
h
141.5 434 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 83 731 cm
58.5 297 m
99 324 l
58.5 351 l
18 324 l
h
58.5 297 m
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 141.5 407 cm
-14.172 -2.8999853 m
(&"0\),)[ 7.320000 8.196000 6.648000 7.800000 0.000000 ] xS
-9.3599997 9.46 m
(!"#)[ 4.068000 8.196000 0.000000 ] xS
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 83 731 cm
58.5 297 m
58.5 261 l
S
0 i
1 1 1 sc
CM
317 551 m
398 551 l
398 515 l
317 515 l
h
317 551 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 83 731 cm
234 180 m
315 180 l
315 216 l
234 216 l
h
234 180 m
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 357.5 533 cm
/F1.1[ 14 0 0 -14 0 0]sf
-21.777 4.7900085 m
("12\(3)[ 9.562000 2.800000 9.548000 8.512000 0.000000 ] xS
/Cs1 SC
1 1 1 sc
CM
163.77383 563.72791 m
176.07541 556.69849 176.07541 545.30151 163.77383 538.27209 c
151.47234 531.24261 131.52766 531.24261 119.22616 538.27209 c
106.92459 545.30151 106.92459 556.69849 119.22616 563.72791 c
131.52766 570.75739 151.47234 570.75739 163.77383 563.72791 c
f
0.60000002 i
0 0 0 sc
1 0 0 -1 83 731 cm
80.773842 167.27209 m
93.075409 174.30153 93.075409 185.69847 80.773842 192.72791 c
68.472336 199.75737 48.527668 199.75737 36.226162 192.72791 c
23.924591 185.69847 23.924591 174.30153 36.226162 167.27209 c
48.527668 160.24263 68.472336 160.24263 80.773842 167.27209 c
S
0.2 w
0 J
0 j
0 i
/Cs2 SC
0 sc
1 0 0 -1 141.5 551 cm
-16.1 4.322309 m
15.1 4.322309 l
S
/F1.1[ 10 0 0 -10 0 0]sf
-16.1 3.8500061 m
(!."3\))[ 3.390000 6.100000 6.830000 9.380000 0.000000 ] xS
1 w
1 J
1 j
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 83 731 cm
58.5 198.00002 m
58.5 225 l
S
0 i
1 1 1 sc
CM
91.773842 266.72791 m
104.07541 259.69849 104.07541 248.30153 91.773842 241.27209 c
79.472336 234.24263 59.527668 234.24263 47.226162 241.27209 c
34.924591 248.30153 34.924591 259.69849 47.226162 266.72791 c
59.527668 273.75739 79.472336 273.75739 91.773842 266.72791 c
f
0.60000002 i
0 0 0 sc
1 0 0 -1 83 731 cm
8.773839 464.27209 m
21.075409 471.30151 21.075409 482.69849 8.773839 489.72791 c
-3.527667 496.75739 -23.472334 496.75739 -35.773838 489.72791 c
-48.075409 482.69849 -48.075409 471.30151 -35.773838 464.27209 c
-23.472334 457.24261 -3.527667 457.24261 8.773839 464.27209 c
S
0.32499695 w
0 J
0 j
0 i
/Cs2 SC
0 sc
1 0 0 -1 69.5 254 cm
-7.835 4.3375015 m
-7.389997 4.3375015 l
S
-6.0600033 4.3375015 m
6.835 4.3375015 l
S
-7.835 4.9874954 m
-7.389997 4.9874954 l
S
-6.0600033 4.9874954 m
6.835 4.9874954 l
S
-7.835 3.8500061 m
(%+/)[ 6.820000 2.000000 0.000000 ] xS
/Cs1 SC
1 1 1 sc
CM
64.773842 320.72791 m
77.075409 313.69849 77.075409 302.30151 64.773842 295.27209 c
52.472332 288.24261 32.527668 288.24261 20.22616 295.27209 c
7.924592 302.30151 7.924592 313.69849 20.22616 320.72791 c
32.527668 327.75739 52.472332 327.75739 64.773842 320.72791 c
f
1 w
1 J
1 j
0.60000002 i
0 0 0 sc
1 0 0 -1 83 731 cm
-18.22616 410.27209 m
-5.924592 417.30151 -5.924592 428.69849 -18.22616 435.72791 c
-30.527666 442.75739 -50.472332 442.75739 -62.773838 435.72791 c
-75.075409 428.69849 -75.075409 417.30151 -62.773838 410.27209 c
-50.472332 403.24261 -30.527666 403.24261 -18.22616 410.27209 c
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 42.5 308 cm
-11.95 3.8500061 m
(/"!")[ 6.850000 6.830000 3.390000 0.000000 ] xS
/Cs1 SC
1 1 1 sc
CM
163.77383 248.72791 m
176.07541 241.69847 176.07541 230.30153 163.77383 223.27209 c
151.47234 216.24263 131.52766 216.24263 119.22616 223.27209 c
106.92459 230.30153 106.92459 241.69847 119.22616 248.72791 c
131.52766 255.75737 151.47234 255.75737 163.77383 248.72791 c
f
0.60000002 i
0 0 0 sc
1 0 0 -1 83 731 cm
80.773842 482.27209 m
93.075409 489.30151 93.075409 500.69849 80.773842 507.72791 c
68.472336 514.75739 48.527668 514.75739 36.226162 507.72791 c
23.924591 500.69849 23.924591 489.30151 36.226162 482.27209 c
48.527668 475.24261 68.472336 475.24261 80.773842 482.27209 c
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 141.5 236 cm
-19.08 3.8500061 m
(4"%!+'.)[ 6.470000 6.830000 6.820000 3.390000 2.000000 6.550000 0.000000 ] xS
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 83 731 cm
6.3371868 463.01584 m
37.567692 441 l
S
58.5 477 m
58.5 441 l
S
-8.9999838 423 m
18 423 l
S
0 i
1 1 1 sc
CM
735.85748 213.00539 m
751.38086 206.34593 751.38086 195.54881 735.85748 188.88934 c
720.33411 182.22986 695.16589 182.22986 679.64252 188.88934 c
664.11914 195.54881 664.11914 206.34593 679.64252 213.00539 c
695.16589 219.66489 720.33411 219.66489 735.85748 213.00539 c
f
0.60000002 i
0 0 0 sc
1 0 0 -1 83 731 cm
652.85748 517.99463 m
668.38086 524.65405 668.38086 535.45117 652.85748 542.11066 c
637.33411 548.77014 612.16589 548.77014 596.64252 542.11066 c
581.11914 535.45117 581.11914 524.65405 596.64252 517.99463 c
612.16589 511.33511 637.33411 511.33511 652.85748 517.99463 c
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 707.75 200.94737 cm
-15.975 3.8500061 m
(-."3\))[ 3.140000 6.100000 6.830000 9.380000 0.000000 ] xS
/Cs1 SC
1 1 1 sc
CM
735.85748 474.0054 m
751.38086 467.34592 751.38086 456.5488 735.85748 449.88934 c
720.33411 443.22986 695.16589 443.22986 679.64252 449.88934 c
664.11914 456.5488 664.11914 467.34592 679.64252 474.0054 c
695.16589 480.66489 720.33411 480.66489 735.85748 474.0054 c
f
0.60000002 i
0 0 0 sc
1 0 0 -1 83 731 cm
652.85748 256.9946 m
668.38086 263.65408 668.38086 274.4512 652.85748 281.11066 c
637.33411 287.77014 612.16589 287.77014 596.64252 281.11066 c
581.11914 274.4512 581.11914 263.65408 596.64252 256.9946 c
612.16589 250.33511 637.33411 250.33511 652.85748 256.9946 c
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 707.75 461.94736 cm
-23.065001 3.8500061 m
(%"$$5'*/)[ 6.820000 6.830000 3.880000 3.880000 8.310000 6.550000 3.010000 0.000000 ] xS
/Cs1 SC
1 1 1 sc
CM
735.85748 427.11066 m
751.38086 420.4512 751.38086 409.65408 735.85748 402.9946 c
720.33411 396.33511 695.16589 396.33511 679.64252 402.9946 c
664.11914 409.65408 664.11914 420.4512 679.64252 427.11066 c
695.16589 433.77014 720.33411 433.77014 735.85748 427.11066 c
f
0.60000002 i
0 0 0 sc
1 0 0 -1 83 731 cm
652.85748 303.88934 m
668.38086 310.5488 668.38086 321.34592 652.85748 328.0054 c
637.33411 334.66489 612.16589 334.66489 596.64252 328.0054 c
581.11914 321.34592 581.11914 310.5488 596.64252 303.88934 c
612.16589 297.22986 637.33411 297.22986 652.85748 303.88934 c
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 707.75 415.05264 cm
-13.355 3.8500061 m
(\)3"+1)[ 6.500000 9.380000 6.830000 2.000000 0.000000 ] xS
/Cs1 SC
1 1 1 sc
CM
735.85748 382.11066 m
751.38086 375.4512 751.38086 364.65408 735.85748 357.9946 c
720.33411 351.33511 695.16589 351.33511 679.64252 357.9946 c
664.11914 364.65408 664.11914 375.4512 679.64252 382.11066 c
695.16589 388.77014 720.33411 388.77014 735.85748 382.11066 c
f
0.60000002 i
0 0 0 sc
1 0 0 -1 83 731 cm
652.85748 348.88934 m
668.38086 355.5488 668.38086 366.34592 652.85748 373.0054 c
637.33411 379.66489 612.16589 379.66489 596.64252 373.0054 c
581.11914 366.34592 581.11914 355.5488 596.64252 348.88934 c
612.16589 342.22986 637.33411 342.22986 652.85748 348.88934 c
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 707.75 370.05264 cm
-10.11 3.8500061 m
(/'2)[ 6.850000 6.550000 0.000000 ] xS
/Cs1 SC
1 1 1 sc
CM
735.85748 168.00539 m
751.38086 161.34593 751.38086 150.54881 735.85748 143.88934 c
720.33411 137.22986 695.16589 137.22986 679.64252 143.88934 c
664.11914 150.54881 664.11914 161.34593 679.64252 168.00539 c
695.16589 174.66489 720.33411 174.66489 735.85748 168.00539 c
f
0.60000002 i
0 0 0 sc
1 0 0 -1 83 731 cm
652.85748 562.99463 m
668.38086 569.65405 668.38086 580.45117 652.85748 587.11066 c
637.33411 593.77014 612.16589 593.77014 596.64252 587.11066 c
581.11914 580.45117 581.11914 569.65405 596.64252 562.99463 c
612.16589 556.33514 637.33411 556.33514 652.85748 562.99463 c
S
0.32499695 w
0 J
0 j
0 i
/Cs2 SC
0 sc
1 0 0 -1 707.75 155.94737 cm
-7.4650002 4.3375015 m
6.4650002 4.3375015 l
S
-7.4650002 4.9874954 m
6.4650002 4.9874954 l
S
-7.4650002 3.8500061 m
(\(+/)[ 6.080000 2.000000 0.000000 ] xS
1 w
1 J
1 j
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 83 731 cm
607.55505 559.67291 m
495 459 l
S
603.51123 515.63385 m
495 441.96689 l
S
607.78058 284.47842 m
495 387 l
S
604.02771 330.50406 m
495 407.09229 l
S
594.1463 371.83142 m
495 407.09229 l
S
0 i
1 1 1 sc
CM
298.77383 617.72791 m
311.07541 610.69849 311.07541 599.30151 298.77383 592.27209 c
286.47232 585.24261 266.52768 585.24261 254.22617 592.27209 c
241.92459 599.30151 241.92459 610.69849 254.22617 617.72791 c
266.52768 624.75739 286.47232 624.75739 298.77383 617.72791 c
f
0.60000002 i
0 0 0 sc
1 0 0 -1 83 731 cm
215.77383 113.27209 m
228.07541 120.30152 228.07541 131.69847 215.77383 138.72791 c
203.47234 145.75737 183.52766 145.75737 171.22617 138.72791 c
158.92459 131.69847 158.92459 120.30152 171.22617 113.27209 c
183.52766 106.24262 203.47234 106.24262 215.77383 113.27209 c
S
0.32499695 w
0 J
0 j
0 i
/Cs2 SC
0 sc
1 0 0 -1 276.5 605 cm
-7.8400002 4.3375015 m
6.8400002 4.3375015 l
S
-7.8400002 4.9874954 m
6.8400002 4.9874954 l
S
-7.8400002 3.8500061 m
("+/)[ 6.830000 2.000000 0.000000 ] xS
/Cs1 SC
1 1 1 sc
CM
460.77383 617.72791 m
473.07541 610.69849 473.07541 599.30151 460.77383 592.27209 c
448.47232 585.24261 428.52768 585.24261 416.22617 592.27209 c
403.92459 599.30151 403.92459 610.69849 416.22617 617.72791 c
428.52768 624.75739 448.47232 624.75739 460.77383 617.72791 c
f
1 w
1 J
1 j
0.60000002 i
0 0 0 sc
1 0 0 -1 83 731 cm
377.77383 113.27209 m
390.07541 120.30152 390.07541 131.69847 377.77383 138.72791 c
365.47232 145.75737 345.52768 145.75737 333.22617 138.72791 c
320.92459 131.69847 320.92459 120.30152 333.22617 113.27209 c
345.52768 106.24262 365.47232 106.24262 377.77383 113.27209 c
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 438.5 605 cm
-14.405 3.8500061 m
(."3\))[ 6.100000 6.830000 9.380000 0.000000 ] xS
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 83 731 cm
209.93575 141.3604 m
251.28044 180 l
S
297.98737 180 m
339.11978 141.37978 l
S
0 i
1 1 1 sc
CM
379.77383 617.72791 m
392.07541 610.69849 392.07541 599.30151 379.77383 592.27209 c
367.47232 585.24261 347.52768 585.24261 335.22617 592.27209 c
322.92459 599.30151 322.92459 610.69849 335.22617 617.72791 c
347.52768 624.75739 367.47232 624.75739 379.77383 617.72791 c
f
0.60000002 i
0 0 0 sc
1 0 0 -1 83 731 cm
296.77383 113.27209 m
309.07541 120.30152 309.07541 131.69847 296.77383 138.72791 c
284.47232 145.75737 264.52768 145.75737 252.22617 138.72791 c
239.92459 131.69847 239.92459 120.30152 252.22617 113.27209 c
264.52768 106.24262 284.47232 106.24262 296.77383 113.27209 c
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 357.5 605 cm
-9.9350004 3.8500061 m
(/'4)[ 6.850000 6.550000 0.000000 ] xS
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 83 731 cm
274.5 180 m
274.5 144.00002 l
S
0 i
1 1 1 sc
CM
253.26445 58.895473 m
267.50836 50.75613 267.50836 37.559658 253.26445 29.420317 c
239.0206 21.280933 215.92677 21.280933 201.68292 29.420317 c
187.439 37.559658 187.439 50.75613 201.68292 58.895473 c
215.92677 67.034859 239.0206 67.034859 253.26445 58.895473 c
f
0.60000002 i
0 0 0 sc
1 0 0 -1 83 731 cm
170.26445 672.10455 m
184.50836 680.2439 184.50836 693.44037 170.26445 701.57971 c
156.0206 709.71906 132.92677 709.71906 118.68292 701.57971 c
104.439 693.44037 104.439 680.2439 118.68292 672.10455 c
132.92677 663.96515 156.0206 663.96515 170.26445 672.10455 c
S
0.32499695 w
0 J
0 j
0 i
/Cs2 SC
0 sc
1 0 0 -1 227.47368 44.157894 cm
-7.6599998 4.3375015 m
6.6599998 4.3375015 l
S
-7.6599998 4.9874954 m
6.6599998 4.9874954 l
S
-7.6599998 3.8500061 m
(4+/)[ 6.470000 2.000000 0.000000 ] xS
/Cs1 SC
1 1 1 sc
CM
478.26443 58.895473 m
492.50836 50.75613 492.50836 37.559658 478.26443 29.420317 c
464.0206 21.280933 440.92676 21.280933 426.68292 29.420317 c
412.439 37.559658 412.439 50.75613 426.68292 58.895473 c
440.92676 67.034859 464.0206 67.034859 478.26443 58.895473 c
f
1 w
1 J
1 j
0.60000002 i
0 0 0 sc
1 0 0 -1 83 731 cm
395.26443 672.10455 m
409.50836 680.2439 409.50836 693.44037 395.26443 701.57971 c
381.0206 709.71906 357.92676 709.71906 343.68292 701.57971 c
329.439 693.44037 329.439 680.2439 343.68292 672.10455 c
357.92676 663.96515 381.0206 663.96515 395.26443 672.10455 c
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 452.47369 44.157894 cm
-15.02 3.8500061 m
(4/"!\))[ 6.470000 6.850000 6.830000 3.390000 0.000000 ] xS
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 83 731 cm
164.50188 669.4184 m
209.8125 630 l
S
306 630 m
349.84982 669.26849 l
S
0 i
1 1 1 sc
CM
369.31708 46.579681 m
383.561 38.440342 383.561 25.24387 369.31708 17.104528 c
355.07324 8.9651432 331.9794 8.9651432 317.73557 17.104528 c
303.49164 25.24387 303.49164 38.440342 317.73557 46.579681 c
331.9794 54.719067 355.07324 54.719067 369.31708 46.579681 c
f
0.60000002 i
0 0 0 sc
1 0 0 -1 83 731 cm
286.31708 684.42029 m
300.561 692.55963 300.561 705.7561 286.31708 713.89545 c
272.07324 722.03485 248.9794 722.03485 234.73555 713.89545 c
220.49164 705.7561 220.49164 692.55963 234.73555 684.42029 c
248.9794 676.28094 272.07324 676.28094 286.31708 684.42029 c
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 343.52631 31.842106 cm
-9.04 3.8500061 m
(!\)6!)[ 3.390000 6.500000 4.800000 0.000000 ] xS
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 83 731 cm
261 657 m
260.7605 678.31622 l
S
58.5 351 m
58.5 405 l
S
0 i
1 1 1 sc
CM
429.5 452 m
470 425 l
429.5 398 l
389 425 l
h
429.5 452 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 83 731 cm
346.5 279 m
387 306 l
346.5 333 l
306 306 l
h
346.5 279 m
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 429.5 425 cm
/F1.1[ 12 0 0 -12 0 0]sf
-9.276 -2.8999853 m
(&"$,)[ 7.320000 8.196000 4.656000 0.000000 ] xS
-17.856001 9.46 m
("12\(3)[ 8.196000 2.400000 8.184000 7.296000 0.000000 ] xS
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 83 731 cm
346.5 333 m
414 406.18671 l
S
3 w
336.60617 266.55322 m
296.42178 216 l
S
0 i
CM
426.57541 455.67923 m
422.89398 467.06024 l
416.31833 461.83328 l
h
426.57541 455.67923 m
f
0 J
0 j
1 0 0 -1 83 731 cm
343.57541 275.32077 m
339.89398 263.93976 l
333.31833 269.16672 l
h
343.57541 275.32077 m
S
1 1 1 sc
CM
292.8125 128 m
389 128 l
389 74 l
292.8125 74 l
h
292.8125 128 m
f
1 w
1 J
1 j
0.60000002 i
0 0 0 sc
1 0 0 -1 83 731 cm
209.8125 603 m
306 603 l
306 657 l
209.8125 657 l
h
209.8125 603 m
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 340.90625 101 cm
-17.646 -2.3599854 m
(%&'!',)[ 8.184000 7.320000 7.860000 4.068000 7.860000 0.000000 ] xS
-30.99 10 m
(4'33\).!$)[ 7.764000 7.860000 11.256000 11.256000 7.800000 7.320000 4.068000 0.000000 ] xS
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 83 731 cm
182.7 504 m
99 441 l
S
330.29999 504 m
414.69321 441.72455 l
S
0 i
1 1 1 sc
CM
266.09375 452 m
314.1875 425 l
266.09375 398 l
218 425 l
h
266.09375 452 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 83 731 cm
183.09375 279 m
231.1875 306 l
183.09375 333 l
135 306 l
h
183.09375 279 m
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 266.09375 425 cm
-14.020125 -2.8999853 m
(&"0\),)[ 7.320000 8.196000 6.648000 7.800000 0.000000 ] xS
-16.684126 9.46 m
(%&'!')[ 8.184000 7.320000 7.860000 4.068000 0.000000 ] xS
3 w
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 83 731 cm
154.20149 334.28091 m
81.162178 405.77478 l
S
0 i
CM
245.20532 404.55356 m
234.26358 399.72052 l
240.13942 393.71765 l
h
245.20532 404.55356 m
f
0 J
0 j
1 0 0 -1 83 731 cm
162.20532 326.44644 m
151.26358 331.27948 l
157.13942 337.28235 l
h
162.20532 326.44644 m
S
1 w
1 J
1 j
0.60000002 i
183.09375 279 m
234 216 l
S
0 i
1 1 1 sc
CM
735.85748 339.0054 m
751.38086 332.34592 751.38086 321.5488 735.85748 314.88934 c
720.33411 308.22986 695.16589 308.22986 679.64252 314.88934 c
664.11914 321.5488 664.11914 332.34592 679.64252 339.0054 c
695.16589 345.66489 720.33411 345.66489 735.85748 339.0054 c
f
0.60000002 i
0 0 0 sc
1 0 0 -1 83 731 cm
652.85748 391.9946 m
668.38086 398.65408 668.38086 409.4512 652.85748 416.11066 c
637.33411 422.77014 612.16589 422.77014 596.64252 416.11066 c
581.11914 409.4512 581.11914 398.65408 596.64252 391.9946 c
612.16589 385.33511 637.33411 385.33511 652.85748 391.9946 c
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 707.75 326.94736 cm
/F1.1[ 10 0 0 -10 0 0]sf
-26.440001 3.8500061 m
(&'3\)!'5.)[ 6.100000 6.550000 9.380000 6.500000 3.390000 6.550000 8.310000 0.000000 ] xS
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 83 731 cm
587.11194 409.54892 m
495 423 l
S
0 i
1 1 1 sc
CM
735.85748 301.11066 m
751.38086 294.4512 751.38086 283.65408 735.85748 276.9946 c
720.33411 270.33511 695.16589 270.33511 679.64252 276.9946 c
664.11914 283.65408 664.11914 294.4512 679.64252 301.11066 c
695.16589 307.77014 720.33411 307.77014 735.85748 301.11066 c
f
0.60000002 i
0 0 0 sc
1 0 0 -1 83 731 cm
652.85748 429.88934 m
668.38086 436.5488 668.38086 447.34592 652.85748 454.0054 c
637.33411 460.66489 612.16589 460.66489 596.64252 454.0054 c
581.11914 447.34592 581.11914 436.5488 596.64252 429.88934 c
612.16589 423.22986 637.33411 423.22986 652.85748 429.88934 c
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 707.75 289.05264 cm
-17.844999 3.8500061 m
(#\)./\)*)[ 6.730000 6.500000 6.100000 6.850000 6.500000 0.000000 ] xS
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 83 731 cm
587.11194 436.45108 m
495 423 l
S
0 i
1 1 1 sc
CM
735.85748 258.0054 m
751.38086 251.34593 751.38086 240.54881 735.85748 233.88934 c
720.33411 227.22986 695.16589 227.22986 679.64252 233.88934 c
664.11914 240.54881 664.11914 251.34593 679.64252 258.0054 c
695.16589 264.66489 720.33411 264.66489 735.85748 258.0054 c
f
0.60000002 i
0 0 0 sc
1 0 0 -1 83 731 cm
652.85748 472.9946 m
668.38086 479.65408 668.38086 490.4512 652.85748 497.11066 c
637.33411 503.77014 612.16589 503.77014 596.64252 497.11066 c
581.11914 490.4512 581.11914 479.65408 596.64252 472.9946 c
612.16589 466.33511 637.33411 466.33511 652.85748 472.9946 c
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 707.75 245.94737 cm
-15.405 3.8500061 m
(1."3\))[ 2.000000 6.100000 6.830000 9.380000 0.000000 ] xS
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 83 731 cm
593.31329 474.61353 m
495 441.96689 l
S
0 i
1 1 1 sc
CM
413.29999 227 m
470 204.5 l
413.29999 182 l
356.60001 204.5 l
h
413.29999 227 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 83 731 cm
330.29999 504 m
387 526.5 l
330.29999 549 l
273.60001 526.5 l
h
330.29999 504 m
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 413.29999 204.5 cm
/F1.1[ 12 0 0 -12 0 0]sf
-13.848 -2.8099854 m
(&"0\),)[ 7.320000 8.196000 6.648000 7.800000 0.000000 ] xS
-27.528 9.5500002 m
(4'33\).!)[ 7.764000 7.860000 11.256000 11.256000 7.800000 7.320000 0.000000 ] xS
/Cs1 SC
1 1 1 sc
CM
265.70001 227 m
322.39999 204.5 l
265.70001 182 l
209 204.5 l
h
265.70001 227 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 83 731 cm
182.7 504 m
239.39999 526.5 l
182.7 549 l
126 526.5 l
h
182.7 504 m
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 265.70001 204.5 cm
-6.8579998 -2.8099854 m
(2\),)[ 8.184000 7.800000 0.000000 ] xS
-35.537998 9.5500002 m
(4'33\).!\)/)[ 7.764000 7.860000 11.256000 11.256000 7.800000 7.320000 4.068000 7.800000 0.000000 ] xS
3 w
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 83 731 cm
330.29999 549 m
257.90625 603 l
S
182.7 549 m
257.90625 603 l
S
0 i
1 1 1 sc
CM
339.5 335 m
380 308 l
339.5 281 l
299 308 l
h
339.5 335 m
f
1 w
0.60000002 i
0 0 0 sc
1 0 0 -1 83 731 cm
256.5 396 m
297 423 l
256.5 450 l
216 423 l
h
256.5 396 m
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 339.5 308 cm
-8.5019999 -2.8999853 m
(1+7\))[ 2.400000 2.400000 6.024000 0.000000 ] xS
-16.836 9.46 m
(%&'!')[ 8.184000 7.320000 7.860000 4.068000 0.000000 ] xS
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 83 731 cm
99 423 m
216 423 l
S
297 423 m
414 423 l
S
ep
end
%%Trailer
%%EOF
